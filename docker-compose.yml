version: "3"

services:
  # Serviço que irá rodar o node
  node:
    # Caminho da Dockerfile
    build: ./
    # Nome do container para facilitar execução
    container_name: car_shop
    # Mesmo que `docker run -t`
    tty: true
    # Mesmo que `docker run -i`
    stdin_open: true
    # Restarta a imagem caso algo a faça parar
    restart: always
    # Lista de serviços do qual este serviço depende
    depends_on:
      # Precisa do mongo funcionando antes de subir o node
      - mongodb
    # Lista de portas mapeadas de dentro para fora do container
    # na notação porta_de_fora:porta_de_dentro
    ports:
      # Expõe a porta da aplicação
      - ${PORT}:${PORT}
    environment:
      - PORT=${PORT}
      - MONGO_DB_URL=mongodb://mongodb:27017/CarShop

  # Serviço que irá rodar o mongodb
  mongodb:
    image: mongo:6.0.7
    container_name: car_shop_db
    restart: always

# Lista de redes que os containeres irão utilizar
networks:
  # Rede padrão, criada automaticamente
  default:
    # Dá um nome específico à rede padrão
    name: car_shop_net

# As chaves `tty`, `stdin_open` e `command` fazem com que o container fique
# rodando em segundo plano, bem como tornam possível o uso do comando
# `docker attach`, já deixando o terminal atual acoplado ao container, direto
# no bash. Apesar disso, utilizar o attach mais de uma vez irá replicar o
# terminal, portanto é melhor utilizar o comando `docker exec`.

# A renomeação da rede padrão é feita pois caso contrário o nome da rede será
# o nome do diretório onde o arquivo atual se encontra, o que pode dificultar
# a listagem individual.
